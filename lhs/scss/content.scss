@charset "utf-8";

/* 다른 scss 임포트할때 확장자 생략가능 */
// @import '_reset';
// @import '_common';
// @import '_layout';
@import '_variables';
// @import '_ui_style';

/* 변수의 이용 */
body {
	font-family: $font-stack;
	font-size: $font-size;
	color: $primary-color;
}

/* 자식 선택자 */
.tabs {
	ul {
		li {
			a {
				font-size: $font-size;
			}
		}
	}
}
/* 자손 선택자 */
.tabs {
	> ul {
		> li {
		 	> a {
				font-size: $font-size;
			}
		}
	}
}

/* & 선택자 (가상 선택자, 가상 엘리먼트, 다중클래스) 부조까지의 선택자 자체를 참조한다. */

.btn {
	/* 버튼 공통 기본 속성 정의 */
	display: inline-block;
	border:1px solid;
	text-align: center;
	text-decoration: none;
	> span {
		display: inline-block;
		position: relative;
	}
	/* 버튼 사이즈별 정의 (.클래스를 붙이지 않고 이용할 경우 부모의 클래스에 그대로 덧붙여져서 변환된다. .btn-sm, .btn.md...) */
	//.을 붙일경우는 .btn.sm, .btn.md 이런식으로 변환된다.
	&-sm {
		padding: 0 15px;
		font-size: 12px;
		line-height: 24px;
	}
	&-md {
		padding: 0 20px;
		font-size: 14px;
		line-height: 30px;
	}
	&-lg {
		padding: 0 25px;
		font-size: 16px;
		line-height:36px;
	}
	/* 버튼 칼라별 정의 */
	&-color1 {
		color: $primary-color;
		border-color: $primary-color;
		background-color: #fff;
		&:hover,
		&:active {
			color: #fff;
			border-color: #fff;
			background-color: $primary-color;
		}
	}
	&-color2 {
		color: $secondary-color;
		border-color: $secondary-color;
		background-color: #fff;
		&:hover,
		&:active {
			color: #fff;
			border-color: #fff;
			background-color: $secondary-color;
		}
	}
	&-color3 {
		color: $third-color;
		border-color: $third-color;
		background-color: #fff;
		&:hover,
		&:active {
			color: #fff;
			border-color: #fff;
			background-color: $third-color;
		}
	}
	/* 버튼 백그라운드 칼라별 정의 */
	&-bg1 {
		color: #fff;
		border-color: $primary-color;
		background-color: $primary-color;
		&:hover,
		&:active {
			color: $third-color;
			border-color: $third-color;
			background-color: #fff;
		}
	}
	&-bg2 {
		color: #fff;
		border-color: $secondary-color;
		background-color: $secondary-color;
		&:hover,
		&:active {
			color: $secondary-color;
			border-color: $secondary-color;
			background-color: #fff;
		}
	}
	&-bg3 {
		color: #fff;
		border-color: $third-color;
		background-color: $third-color;
		&:hover,
		&:active {
			color: $third-color;
			border-color: $third-color;
			background-color: #fff;
		}
	}
	/* 버튼 라운드 */
	&-round {
		border-radius: $basic-radius;
	}
	&.another {
		background-color: #ff6600;
	}
}

// 미리 클래스에 스타일을 정의한 후 다른 클래스에서 @extend를 사용하여 상속받게 할 수 있다.
.box {
	padding: 50px;
	border: 1px solid #333;
	text-align: center;
}
.news-box {
	@extend .box;
	background-color: #666;
}
.list-box {
	@extend .box;
	background-color: #999;
}

//% 플레이스홀더는 직접 클래스를 변환하지 않고 상속만 받아서 사용할 수 있게 한다.
%box2 {
	padding: 100px;
	border: 2px solid #ff6600;
	text-align: center;
}
.news-box2 {
	@extend %box2;
	background-color: #666;
}
.list-box2 {
	@extend %box2;
	background-color: #999;
}